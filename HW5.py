#!/usr/bin/env python
# coding: utf-8

# # CSCI 3360 Homework 5 - Brandon Amirouche

# ## Instructions

# Download the dataset from https://archive.ics.uci.edu/ml/datasets/UrbanGB%2C+urban+road+accidents+coordinates+labelled+by+the+urban+center). After extracting \urbanGB.all.zip", work with the data contained in \urbanGB.txt" and answer the following questions.
# 
# Note:  you are strongly encouraged to use the KMeans model from scikit-learn.
# 
#     1.  Create a scatter plot of the data. Adjust the aspect ratio of your plot so that the width:height ratio is 2:3 (e.g., 10 in x 15 in).  Use the same size for all subsequent scatter plots. 
# 
# 
#     2.  Use Kmeans to cluster the data.  Try k = 2, 3, 4, 5 and 6.  For each KMeans model, obtain the following:
#         (a)  cluster centers/means
#         (b)  size of each cluster
#         (c)  inertia, which is the sum of squared distances between each data point to its closest cluster center
#         (d)  scatter plot of the clusters distinguished by different colors
# 
# 
#     3.  Create a line plot indicating how inertia changes as k varies.
# 
# 
#     4.  Based on the line plot of inertia vs. k, which k value seems to be optimal (for our purposes, optimal means where the plot exhibits the sharpest bend)?
# 
# 
#     5. Consider the cluster centers generated by the KMeans model with optimal k, which urban cities/areas does each cluster center corresponds to? Note that some cluster centers may be close to multiple major cities.  (Hint:  Google Maps could help with  finding a place by inputting latitude & longitude coordinates)
# 

# ## Academic Honesty Statement

# In[1]:


# first fill in your name
first_name = "Brandon"
last_name  = "Amirouche"

print("****************************************************************")
print("CSCI 3360 Homework 5")
print(f"completed by {first_name} {last_name}")
print(f"""
I, {first_name} {last_name}, certify that the following code
represents my own work. I have neither received nor given 
inappropriate assistance. I have not consulted with another
individual, other than a member of the teaching staff, regarding
the specific problems in this homework. I recognize that any 
unauthorized assistance or plagiarism will be handled in 
accordance with the University of Georgia's Academic Honesty
Policy and the policies of this course.
""")
print("****************************************************************")


# ## Problem 1

# Create a scatter plot of the data. Adjust the aspect ratio of your plot so that the width:height ratio is 2:3 (e.g., 10 in x 15 in).  Use the same size for all subsequent scatter plots.

# In[61]:


from typing import List
from collections import Counter
from typing import Dict
import csv
from collections import defaultdict
import pandas as pd
import numpy as np
from matplotlib import pyplot as plt
from typing import NamedTuple
from scipy.spatial import distance
from sklearn import datasets
from sklearn import metrics
from sklearn.neighbors import KNeighborsClassifier
from sklearn.naive_bayes import GaussianNB
import seaborn as sns
from sklearn.cluster import KMeans

header_list = ['Latitude', 'Longitude']
data = pd.read_csv('urbanGB.txt', names=header_list)
df = pd.DataFrame(data)
print(df)
print(f"\tScatter Plot for Longitude vs Latitude:\n")
print(sns.scatterplot(x = 'Longitude', y = 'Latitude', data = df, color = 'b'))
sns.set(rc={'figure.figsize':(6,9)})
plt.show()


# ## Problem 2

# Use Kmeans to cluster the data.  Try k = 2, 3, 4, 5 and 6.  For each KMeans model, obtain the following:
#     (a)  cluster centers/means
#     (b)  size of each cluster
#     (c)  inertia, which is the sum of squared distances between each data point to its closest cluster center
#     (d)  scatter plot of the clusters distinguished by different colors

# In[62]:


from sklearn.decomposition import PCA

kmeans2 = KMeans(n_clusters=2).fit(data)
kmeans3 = KMeans(n_clusters=3).fit(data)
kmeans4 = KMeans(n_clusters=4).fit(data)
kmeans5 = KMeans(n_clusters=5).fit(data)
kmeans6 = KMeans(n_clusters=6).fit(data)

y2 = kmeans2.predict(data)
y3 = kmeans3.predict(data)
y4 = kmeans4.predict(data)
y5 = kmeans5.predict(data)
y6 = kmeans6.predict(data)


# In[63]:


print(f"K = 2:\n")
print(f"The Cluster Size = {np.bincount(y2)}")
print(f"Cluster Centers = {pd.DataFrame(kmeans2.cluster_centers_)}")
print(f"The Intertia = {kmeans2.inertia_}")
plt.scatter(data['Longitude'], data['Latitude'], c = kmeans2.labels_)
print(f"\n")


# In[64]:


print(f"K = 3:\n")
print(f"The Cluster Size = {np.bincount(y3)}")
print(f"Cluster Centers = {pd.DataFrame(kmeans3.cluster_centers_)}")
print(f"The Intertia = {kmeans3.inertia_}")
plt.scatter(data['Longitude'], data['Latitude'], c = kmeans3.labels_)
print(f"\n")


# In[68]:


print(f"K = 4:\n")
print(f"The Cluster Size = {np.bincount(y4)}")
print(f"Cluster Centers = {pd.DataFrame(kmeans4.cluster_centers_)}")
print(f"The Intertia = {kmeans4.inertia_}")
plt.scatter(data['Longitude'], data['Latitude'], c = kmeans4.labels_)
print(f"\n")


# In[66]:


print(f"K = 5:\n")
print(f"The Cluster Size = {np.bincount(y5)}")
print(f"Cluster Centers = {pd.DataFrame(kmeans5.cluster_centers_)}")
print(f"The Intertia = {kmeans5.inertia_}")
plt.scatter(data['Longitude'], data['Latitude'], c = kmeans5.labels_)
print(f"\n")


# In[67]:


print(f"K = 6:\n")
print(f"The Cluster Size = {np.bincount(y6)}")
print(f"Cluster Centers = {pd.DataFrame(kmeans6.cluster_centers_)}")
print(f"The Intertia = {kmeans6.inertia_}")
plt.scatter(data['Longitude'], data['Latitude'], c = kmeans6.labels_)
print(f"\n")


# ## Problem 3

# Create a line plot indicating how inertia changes as k varies.

# In[42]:


k = [2,3,4,5,6]
inertia = set()
plt.figure(figsize = (6,9))
plt.plot(k,inertia, c = "blue", linewidth = 3)
plt.plot(k, inertia, markersize = 15)
plt.xlabel("k")
plt.ylabel ("inertia")
plt.show()


# ## Problem 4

# Based on the line plot of inertia vs. k, which k value seems to be optimal (for our purposes, optimal means where the plot exhibits the sharpest bend)?

# The k value that seems optimal is k = 4. This is because the plot at k = 4 experiences the sharpest bend of all the graphs.

# ## Problem 5

# Consider the cluster centers generated by the KMeans model with optimal k, which urban cities/areas does each cluster center corresponds to? Note that some cluster centers may be close to multiple major cities.  (Hint:  Google Maps could help with  finding a place by inputting latitude & longitude coordinates)

# The urban areas associated with this are all in the United Kingdom near Highbridge, Albany, Hayfield, and Falkirk. All of these cities were obtained using google maps.
